<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ss.isc.data.resource.mapper.ResourcePeopleMapper">

    <select id="page" parameterType="com.ss.isc.data.resource.common.web.PeopleQueryVO" resultType="com.ss.isc.data.resource.common.model.People">
        SELECT
            t1.id,
            t1.peopleId,
            t1.idCardPic,
            t1.peopleName,
            sex.enumName as "gender",
            peopleType.enumName as "peopleTypeName",
            t1.credentialNo,
            nation.enumName as "nation",
            country.enumName as "nationality",
            educationCode.enumName as "education",
            t1.label,
            maritalStatusCode.enumName as "maritalStatus",
            t1.residenceDetailAddres,
            t1.phoneNo,
            t1.facePic,
            t1.isLeave,
            t1.villageCode,
            t2.villageName
        FROM
            cw_base_people t1
        LEFT JOIN cw_base_village t2 ON t1.villageCode = t2.villageCode
        LEFT JOIN cw_base_enum sex ON sex.enumType = 'sex' AND t1.genderCode = sex.enumValue
        LEFT JOIN cw_base_enum peopleType ON peopleType.enumType = 'peopleType' AND t1.peopleType = peopleType.enumValue
        LEFT JOIN cw_base_enum nation ON nation.enumType = 'nation' AND t1.nationCode = nation.enumValue
        LEFT JOIN cw_base_enum country ON country.enumType = 'country' AND t1.nationalityCode = country.enumValue
        LEFT JOIN cw_base_enum educationCode ON educationCode.enumType = 'educationCode' AND t1.educationCode = educationCode.enumValue
        LEFT JOIN cw_base_enum maritalStatusCode ON maritalStatusCode.enumType = 'maritalStatusCode' AND t1.maritalStatusCode = maritalStatusCode.enumValue
        <where>
            t1.delete_flag = 0 AND t1.isLeave = 0
            <!-- 我的收藏 -->
            <if test="ifCollection !=null and ifCollection == 1">
                AND t1.peopleId IN (SELECT people_id FROM ss_people_collection WHERE user_id = #{userIds})
            </if>
            <!-- 性别 -->
            <if test="genderCode !=null and genderCode !=''">
                AND t1.genderCode = #{genderCode}
            </if>
            <!-- 民族 -->
            <if test="nationCode !=null and nationCode !=''">
                AND t1.nationCode = #{nationCode}
            </if>
            <!-- 小区 -->
            <if test="villageCodes !=null and villageCodes !=''">
                AND FIND_IN_SET(t1.villageCode,#{villageCodes})
            </if>
            <!-- 人员标签 -->
            <if test="labelStr !=null and labelStr !=''">
                AND
                <foreach collection="labelArr" item="item" open="(" separator=" OR " close=")">
                    FIND_IN_SET(#{item},t1.label)
                </foreach>
            </if>
            <!-- 综合搜索框：身份证、手机号、姓名模糊匹配 -->
            <if test="inputQuery !=null and inputQuery !=''">
                AND INSTR(CONCAT(t1.peopleName,t1.credentialNo,IFNULL(t1.phoneNo,'')),#{inputQuery}) > 0
            </if>
        </where>
        ORDER BY t1.updateTime DESC
    </select>


    <select id="selectById" resultType="com.ss.isc.data.resource.common.model.People">
        SELECT
        t1.*,
        t2.villageName,
        t3.enumName AS 'peopleTypeName',
        t4.enumName AS 'credentialTypeName',
        t5.enumName AS 'sourceName',
        t6.regionName AS 'streetName',
        t7.regionCode AS 'provinceCode',
        t7.regionName AS 'province',
        t10.facedb_face_id AS facedbfaceId,
        t10.id AS ssFacedbPeopleId
        FROM
        cw_base_people t1
        LEFT JOIN cw_base_village t2 ON t1.villageCode = t2.villageCode
        LEFT JOIN cw_base_enum t3 ON t3.enumType = 'peopleType' AND t1.peopleType = t3.enumValue
        LEFT JOIN cw_base_enum t4 ON t4.enumType = 'credentialType' AND t1.credentialType = t4.enumValue
        LEFT JOIN cw_base_enum t5 ON t5.enumType = 'source' AND t1.credentialType = t5.enumValue
        LEFT JOIN cw_base_region t6 ON t1.streetCode = t6.regionCode
        LEFT JOIN cw_base_region t7 ON CONCAT(SUBSTR(t1.originCode,1,2),'0000') = t7.regionCode
        LEFT JOIN cw_base_village_facedb t8 ON t8.villageCode = t1.villageCode
        LEFT JOIN ss_facedb_info t9 ON t9.facedb_id = t8.facedbId
        LEFT JOIN ss_facedb_people t10 ON t10.people_id = t1.peopleId AND t10.facedb_id = t9.id
        WHERE
        t1.id = #{id} AND t1.delete_flag = 0
    </select>

    <select id="selectByIdArrStr" resultType="com.ss.isc.data.resource.common.model.People">
        SELECT
        t1.*,
        t2.villageName,
        t3.enumName AS 'peopleTypeName',
        t4.enumName AS 'credentialTypeName',
        t5.enumName AS 'sourceName',
        t6.regionName AS 'streetName',
        t7.regionCode AS 'provinceCode',
        t7.regionName AS 'province',
        t10.facedb_face_id AS facedbfaceId,
        t10.id AS ssFacedbPeopleId
        FROM
        cw_base_people t1
        LEFT JOIN cw_base_village t2 ON t1.villageCode = t2.villageCode
        LEFT JOIN cw_base_enum t3 ON t3.enumType = 'peopleType' AND t1.peopleType = t3.enumValue
        LEFT JOIN cw_base_enum t4 ON t4.enumType = 'credentialType' AND t1.credentialType = t4.enumValue
        LEFT JOIN cw_base_enum t5 ON t5.enumType = 'source' AND t1.credentialType = t5.enumValue
        LEFT JOIN cw_base_region t6 ON t1.streetCode = t6.regionCode
        LEFT JOIN cw_base_region t7 ON CONCAT(SUBSTR(t1.originCode,1,2),'0000') = t7.regionCode
        LEFT JOIN cw_base_village_facedb t8 ON t8.villageCode = t1.villageCode
        LEFT JOIN ss_facedb_info t9 ON t9.facedb_id = t8.facedbId
        LEFT JOIN ss_facedb_people t10 ON t10.people_id = t1.peopleId AND t10.facedb_id = t9.id
        WHERE
        FIND_IN_SET(t1.id,#{ids}) AND t1.delete_flag = 0
    </select>

    <!-- 删除实有人口（更新删除标识） -->
    <update id="deleteById">
        UPDATE
            cw_base_people
        SET
            delete_flag = 1
        WHERE
            FIND_IN_SET(id,#{ids})
    </update>

    <select id="selectFacedbId" resultType="java.lang.String">
        SELECT facedbId FROM cw_base_village_facedb WHERE villageCode =#{villageCode}
        LIMIT 0,1
    </select>

    <insert id="insertFacedbfaceInfo">
        INSERT INTO cw_base_people_facedbface_ref (peopleId, facedbfaceId)
        VALUES
        (
        #{peopleId,jdbcType=VARCHAR},
        #{facedbfaceId,jdbcType=VARCHAR}
        )
    </insert>


    <select id="check" resultType="com.ss.isc.data.resource.common.model.People">
        SELECT
        t1.*,t2.facedbfaceId
        FROM
        cw_base_people t1
        LEFT JOIN cw_base_people_facedbface_ref t2 ON t1.peopleId = t2.peopleId
        WHERE
        t1.villageCode = #{villageCode}
        AND t1.credentialNo = #{credentialNo}
        AND t1.isLeave = 0
        LIMIT 0,1
    </select>


    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" separator=";" close="">
            update cw_base_people set
            villageCode = #{item.villageCode,jdbcType=VARCHAR},
            peopleType = #{item.peopleType,jdbcType=SMALLINT},
            credentialType = #{item.credentialType,jdbcType=INTEGER},
            credentialNo = #{item.credentialNo,jdbcType=VARCHAR},
            peopleName = #{item.peopleName,jdbcType=VARCHAR},
            gender = #{item.gender,jdbcType=VARCHAR},
            genderCode = #{item.genderCode,jdbcType=VARCHAR},
            nation = #{item.nation,jdbcType=VARCHAR},
            nationCode = #{item.nationCode,jdbcType=INTEGER},
            birthDate = #{item.birthDate,jdbcType=VARCHAR},
            origin = #{item.origin,jdbcType=VARCHAR},
            originCode = #{item.originCode,jdbcType=VARCHAR},
            domicile = #{item.domicile,jdbcType=VARCHAR},
            domicileCode = #{item.domicileCode,jdbcType=VARCHAR},
            streetCode = #{item.streetCode,jdbcType=INTEGER},
            domicileRoadName = #{item.domicileRoadName,jdbcType=VARCHAR},
            domicileRoadCode = #{item.domicileRoadCode,jdbcType=VARCHAR},
            domicileDetailAddress = #{item.domicileDetailAddress,jdbcType=VARCHAR},
            domicileAddress = #{item.domicileAddress,jdbcType=VARCHAR},
            residence = #{item.residence,jdbcType=VARCHAR},
            residenceCode = #{item.residenceCode,jdbcType=VARCHAR},
            residenceRoadName = #{item.residenceRoadName,jdbcType=VARCHAR},
            residenceRoadCode = #{item.residenceRoadCode,jdbcType=VARCHAR},
            residenceDetailAddres = #{item.residenceDetailAddres,jdbcType=VARCHAR},
            residenceAddress = #{item.residenceAddress,jdbcType=VARCHAR},
            education = #{item.education,jdbcType=VARCHAR},
            educationCode = #{item.educationCode,jdbcType=INTEGER},
            political = #{item.political,jdbcType=VARCHAR},
            politicalCode = #{item.politicalCode,jdbcType=INTEGER},
            maritalStatus = #{item.maritalStatus,jdbcType=VARCHAR},
            maritalStatusCode = #{item.maritalStatusCode,jdbcType=INTEGER},
            spouseName = #{item.spouseName,jdbcType=VARCHAR},
            spouseNO = #{item.spouseNO,jdbcType=VARCHAR},
            nationality = #{item.nationality,jdbcType=VARCHAR},
            nationalityCode = #{item.nationalityCode,jdbcType=INTEGER},
            entryTime = #{item.entryTime},
            surnameEng = #{item.surnameEng,jdbcType=VARCHAR},
            nameEng = #{item.nameEng,jdbcType=VARCHAR},
            phoneNo = #{item.phoneNo,jdbcType=VARCHAR},
            idCardPic = #{item.idCardPic,jdbcType=VARCHAR},
            facePic = #{item.facePic,jdbcType=VARCHAR},
            source = #{item.source,jdbcType=SMALLINT},
            updateTime = REPLACE(unix_timestamp(current_timestamp(3)),'.',''),
            label = #{item.label,jdbcType=VARCHAR},
            servicePlace = #{item.servicePlace,jdbcType=VARCHAR}
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <insert id="batchInsertFaceInfo" parameterType="java.util.List">
        INSERT INTO cw_base_people_facedbface_ref
        (peopleId,facedbfaceId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.peopleId},
            #{item.facedbfaceId}
            )
        </foreach>
    </insert>

    <!--查询人房关系列表-->
    <select id="peopleList" resultType="com.ss.isc.data.resource.common.model.People"
            parameterType="com.ss.isc.data.resource.common.web.PeopleHouseVO">
        SELECT * FROM cw_base_people
        WHERE id NOT IN(
        SELECT
        t2.id
        FROM
        cw_relation_peoplehouse t1
        LEFT JOIN cw_base_people t2 ON t1.peopleId = t2.id
        AND t1.villageCode = t2.villageCode
        WHERE
        t1.houseId = #{houseId}
        )
        AND isLeave =0
        <if test="villageCode !=null and villageCode !=''">
            AND villageCode = #{villageCode}
        </if>
        <if test="credentialNo !=null and credentialNo !=''">
            AND credentialNo LIKE CONCAT('%', #{credentialNo}, '%')
        </if>
        <if test="peopleName !=null and peopleName !=''">
            AND peopleName LIKE CONCAT('%', #{peopleName}, '%')
        </if>
        LIMIT 0,#{pageSize}
    </select>

    <!--查询人车关系列表-->
    <select id="peopleVehicleList" resultType="com.ss.isc.data.resource.common.model.People" parameterType="com.ss.isc.data.resource.common.model.PeopleVehicle">
        SELECT * FROM cw_base_people
        WHERE id NOT IN(
        SELECT
        t2.id
        FROM
        cw_base_vehicle t1
        LEFT JOIN cw_base_people t2 ON t1.peopleId = t2.id
        AND t1.villageCode = t2.villageCode
        WHERE
        t1.id = #{id}
        )
        AND isLeave =0
        <if test="villageCode !=null and villageCode !=''">
            AND villageCode = #{villageCode}
        </if>
        <if test="credentialNo !=null and credentialNo !=''">
            AND credentialNo LIKE CONCAT('%', #{credentialNo}, '%')
        </if>
        <if test="peopleName !=null and peopleName !=''">
            AND peopleName LIKE CONCAT('%', #{peopleName}, '%')
        </if>
        LIMIT 0,#{pageSize}
    </select>
</mapper>