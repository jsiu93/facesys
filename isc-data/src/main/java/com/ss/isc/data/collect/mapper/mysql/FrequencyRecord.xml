<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ss.isc.data.collect.mapper.FrequencyRecordMapper">

	<insert id="batchCompareFrequencyRecord" parameterType="map">
		INSERT INTO cw_frequency_record
		  (addPersonId,beginTime,endTime,amount,updateTime) 
		  VALUES
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.addPersonId},#{item.beginTime},#{item.endTime},#{item.amount},now())
		</foreach>  
		ON DUPLICATE KEY UPDATE 
		beginTime= values(beginTime),
		endTime= values(endTime),
		amount= values(amount),
		updateTime=now()
	</insert>
	
	<select id="getFrequencyRecordById" resultType="com.ss.isc.data.collect.common.model.FrequencyRecord">
		SELECT *  FROM cw_frequency_record 
		where addPersonId = #{addPersonId}
	</select>
    
    <select id="analysisFrequeryRecord" parameterType="com.ss.isc.data.collect.common.web.AddPersonDetailQuery"
    			resultType="com.ss.isc.data.collect.common.model.FrequencyRecord">
    	SELECT
			temp.addPersonId,
			temp.amount,
			#{captureTimeB} AS beginTime,
			#{captureTimeE} AS endTime
		FROM
			(
				SELECT
					*, COUNT(id) AS amount
				FROM
					cw_add_person_detail
				WHERE
					captureTime <![CDATA[ >= ]]> #{captureTimeB}
				AND captureTime <![CDATA[ < ]]> #{captureTimeE}
				GROUP BY
					addPersonId
			) temp
		WHERE
			temp.amount <![CDATA[ >= ]]> #{amount}
    </select>
    
    
    <select id="pages" parameterType="com.ss.isc.data.collect.common.web.FrequencyRecordQuery"
    			resultType="com.ss.isc.data.collect.common.dto.FrequencyRecordDTO">
    	SELECT
		  t.createTime,
		  t.updateTime,
		  t.amount,
		  t.state,
		  t1.id,
		  t1.capturePath,
		  t1.panoramaPath,
		  t1.villageId AS villageCode,
		  t1.lastCaptureTime,
		  t1.facePitch,
		  t1.faceYaw,
		  t1.faceRoll,
		  t1.facex,
		  t1.facey,
		  t1.faceWidth,
		  t1.faceHeight,
		  t2.villageName,
		  t3.cameraName
		FROM
			`cw_frequency_record` t
		LEFT JOIN cw_add_person t1 ON t.addPersonId = t1.id AND t1.villageId IS NOT NULL
		LEFT JOIN cw_base_village t2 ON t1.villageId = t2.villageCode
		LEFT JOIN cw_base_camera t3 ON t1.deviceNo = t3.cameraId
		<where>
		        t1.id IS NOT NULL
			    AND <![CDATA[t.state !=4]]>
			<if test="villageCode !=null and villageCode !=''">
			    AND t1.villageId = #{villageCode}
			</if>
			<if test="state !=null">
				AND t.state = #{state}
			</if>
			<if test="amount !=null">
			    AND <![CDATA[t.amount >= #{amount}]]>
			</if>
			<if test="beginTime != null">
				AND  <![CDATA[t.updateTime >= #{beginTime}]]>
			</if>
			<if test="endTime != null">
				AND  <![CDATA[t.updateTime <= #{endTime}]]>
			</if>
			<if test="sqlMap.dsf !=null">
				AND FIND_IN_SET(t1.villageId,#{sqlMap.dsf})
			</if>
			<if test="villageName !=null and villageName !=''">
			    AND t3.villageName  LIKE CONCAT('%', #{villageName}, '%')
			</if>
		</where>
    	ORDER BY t.state,t.updateTime DESC,t1.lastCaptureTime DESC	  
    </select>
    
    
    <select id="frequencyRecordTop" parameterType="com.ss.isc.data.collect.common.web.FrequencyRecordQuery"
    			resultType="com.ss.isc.data.collect.common.dto.FrequencyRecordDTO">
    	SELECT
		  t.createTime,
		  t.updateTime,
		  t.amount,
		  t.state,
		  t1.id,
		  t1.capturePath,
		  t1.panoramaPath,
		  t1.villageId AS villageCode,
		  t1.lastCaptureTime,
		  t2.villageName
		FROM
			`cw_frequency_record` t
		LEFT JOIN cw_add_person t1 ON t.addPersonId = t1.id AND t1.villageId IS NOT NULL
		LEFT JOIN cw_base_village t2 ON t1.villageId = t2.villageCode
		<where>
		        t1.id IS NOT NULL
			    AND t.state = 1
			<if test="villageCode !=null and villageCode !=''">
			    AND t1.villageId = #{villageCode}
			</if>
		</where>
    	ORDER BY t.amount DESC	 
    	LIMIT 0,5   
    </select>
    
    
    <update id="update" parameterType="com.ss.isc.data.collect.common.model.FrequencyRecord">
    	UPDATE cw_frequency_record
		<set>
	      <if test="state != null" >
	        state = #{state,jdbcType=INTEGER},
	      </if>
	       <if test="updateTime != null" >
	        updateTime = #{updateTime}
	      </if>
	    </set>
   		 where addPersonId = #{addPersonId,jdbcType=VARCHAR}
    </update>
    
</mapper>